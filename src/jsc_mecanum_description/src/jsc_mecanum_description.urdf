<?xml version="1.0" ?>
<robot name="jsc_mecanum_bot" xmlns:xacro="http://ros.org/wiki/xacro">
    
  <material name="darkgrey">
    <color rgba="0.1 0.1 0.1 1.0" />
  </material>
  <material name="grey_blue">
    <color rgba="0.5 0.5 0.65 1.0" />
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0" />
  </material>
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
</material>

<!--*** Definición de los parámetros del robot ***-->

  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:property name="M_PI_2" value="1.570796327" />
  <xacro:property name="DEG_TO_RAD" value="0.017453293" />

  <xacro:property name="base_size_x" value="0.20" />
  <xacro:property name="base_size_y" value="0.075" />
  <xacro:property name="base_size_z" value="0.08" />
  <xacro:property name="base_mass" value="2.00" />
  <xacro:property name="lidar_mass" value="0.10" />

  <xacro:property name="wheel_radius" value="0.04" />
  <xacro:property name="wheel_width" value="0.035" />
  <xacro:property name="wheel_offset_x" value="0.063"/>
  <xacro:property name="wheel_offset_y" value="0.05"/>
  <xacro:property name="wheel_offset_z" value="0.01"/>
  <xacro:property name="wheel_mass" value="0.500"/>

  <!--*** Macros de inercia ***-->

  <xacro:macro name="box_inertia" params="m x y z">
    <inertia ixx="${m*(y*y+z*z)/12}" ixy="0" ixz="0"
             iyy="${m*(x*x+z*z)/12}" iyz="0"
             izz="${m*(x*x+z*z)/12}"
    />
  </xacro:macro>
  <xacro:macro name="cylinder_inertia" params="m r w">
    <inertia ixx="${m*(3*r*r+w*w)/12}" ixy="0" ixz="0"
             iyy="${m*(3*r*r+w*w)/12}" iyz="0"
             izz="${m*r*r/2}"
    />
  </xacro:macro>

  <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->

  <link name="base_footprint" />

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint" />
    <child link="base_link" />
    <origin xyz="0 0 0.02" rpy="0 0 0" />
  </joint>
  
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0.04" rpy="0 0 0" />
      <geometry>
        <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
      </geometry>
      <material name="grey_blue" />
    </visual>
    <collision>
      <origin xyz="0 0 0.04" rpy="0 0 0" />
      <geometry>   
        <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="${base_mass}"/>
      <xacro:box_inertia m="${base_mass}" x="${base_size_x}" y="${base_size_y}" z="${base_size_z}"/>
    </inertial>
  </link>


  <!-- *********************** DRIVE WHEELS ******************************  -->

  <joint name="fl_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="fl_wheel_link"/>
    <origin xyz="${-wheel_offset_x} ${-wheel_offset_y} ${wheel_offset_z}" rpy="0 0 ${-M_PI/2}" />
    <axis xyz="1 0 0" rpy="0 0 0"/>
  </joint>

  <link name="fl_wheel_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://jsc_mecanum_description/meshes/fl_wheel_link.STL" scale="0.6 0.6 0.6" />
      </geometry>
      <material name="darkgrey" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>   
        <box size="${wheel_width} ${wheel_radius*2} ${wheel_radius*2}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${wheel_mass}" />
      <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" w="${wheel_width}" />
    </inertial>
  </link>

  <joint name="fr_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="fr_wheel_link"/>
    <origin xyz="${-wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 ${M_PI/2}" />
    <axis xyz="-1 0 0" rpy="0 0 0"/>
  </joint>

  
  <link name="fr_wheel_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://jsc_mecanum_description/meshes/fr_wheel_link.STL" scale="0.6 0.6 0.6" />
      </geometry>
      <material name="darkgrey" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>   
        <box size="${wheel_width} ${wheel_radius*2} ${wheel_radius*2}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${wheel_mass}" />
      <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" w="${wheel_width}" />
    </inertial>
  </link>

  <joint name="rl_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="rl_wheel_link"/>
    <origin xyz="${wheel_offset_x} ${-wheel_offset_y} ${wheel_offset_z}" rpy="0 0 ${-M_PI/2}" />
    <axis xyz="1 0 0" rpy="0 0 0"/>
  </joint>
  <link name="rl_wheel_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://jsc_mecanum_description/meshes/rl_wheel_link.STL" scale="0.6 0.6 0.6" />
      </geometry>
      <material name="darkgrey" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>   
        <box size="${wheel_width} ${wheel_radius*2} ${wheel_radius*2}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${wheel_mass}" />
      <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" w="${wheel_width}" />
    </inertial>
  </link>

  <joint name="rr_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="rr_wheel_link"/>
    <origin xyz="${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 ${M_PI/2}" />
    <axis xyz="-1 0 0" rpy="0 0 0"/>
  </joint>
  <link name="rr_wheel_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://jsc_mecanum_description/meshes/rr_wheel_link.STL" scale="0.6 0.6 0.6" />
      </geometry>
      <material name="darkgrey" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>   
        <box size="${wheel_width} ${wheel_radius*2} ${wheel_radius*2}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${wheel_mass}" />
      <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" w="${wheel_width}" />
    </inertial>
  </link>

  <!-- Configuración del LIDAR -->
  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="-0.05 0 0.085" rpy="0 0 0"/>
  </joint>

  <link name="lidar_link">
    <collision>
    <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <cylinder radius="0.02" length="0.01"/>
        </geometry>
    </collision>
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <cylinder radius="0.02" length="0.01"/>
        </geometry>
        <material name="black" />
    </visual>
    <inertial>
        <origin xyz="0 0 0" rpy="0.0 0.0 0.0"/>
        <mass value="${lidar_mass}"/>
        <xacro:box_inertia m="${lidar_mass}" x="${base_size_x}" y="${base_size_y}" z="${base_size_z}"/>
    </inertial>
    
    <sensor name="lidar" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>32000</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.00000</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.060000</min>
            <max>30</max>
            <resolution>0.015000</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>lidar_link</frame_name>
        </plugin>
      </sensor>
  </link>


  

  <!-- ROS2_CONTROL-->

  <ros2_control name="jsc_mecanum" type="system">
    <hardware>
      <plugin>jsc_mecanum_hardware/MecanumbotHardware</plugin>
      <param name="serial_port">/dev/ttyUSB0</param>
    </hardware>
    <joint name="fl_wheel_joint">
      <command_interface name="velocity" />
      <state_interface name="position" />
      <state_interface name="velocity" />
      <param name="motor_id">1</param>
    </joint>
    <joint name="fr_wheel_joint">
      <command_interface name="velocity" />
      <state_interface name="position" />
      <state_interface name="velocity" />
      <param name="motor_id">2</param>
    </joint>
    <joint name="rl_wheel_joint">
      <command_interface name="velocity" />
      <state_interface name="position" />
      <state_interface name="velocity" />
      <param name="motor_id">4</param>
    </joint>
    <joint name="rr_wheel_joint">
      <command_interface name="velocity" />
      <state_interface name="position" />
      <state_interface name="velocity" />
      <param name="motor_id">8</param>
    </joint>
  </ros2_control>


<!--   <gazebo>
    <plugin name="jsc_mecanum_bot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate> 
      
      <joint_name>fl_wheel_joint</joint_name>
      <joint_name>fr_wheel_joint</joint_name>
      <joint_name>rl_wheel_joint</joint_name>
      <joint_name>rr_wheel_joint</joint_name>
    </plugin>
  </gazebo>
 -->


  

</robot>